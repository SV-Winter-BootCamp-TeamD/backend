version: '3'
services:
  database:
    container_name: teamd_db
    image: mysql:8.0
    env_file:
      - .env
    ports:
      - "3306:3306"
    networks:
      - teamd

  redis:
    container_name: redis
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - teamd

  backend:
    container_name: teamd_backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - database
      - redis
    command: >
      sh -c "sleep 10 &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    tty: true
    networks:
      - teamd

  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    depends_on:
      - backend
    networks:
      - teamd

  celery:
    container_name: celery
    build:
      context: .
    command: "celery -A backend.celery worker --loglevel=info --pool=solo"
    depends_on:
      - backend
      - rabbitmq
    volumes:
      - .:/app
    networks:
      - teamd

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend
    networks:
      - teamd

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
      - backend
    networks:
      - teamd

  node_exporter:
    container_name: node-exporter
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc)($|/)'
    networks:
      - teamd

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8080:8080
    networks:
      - teamd

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - teamd

networks:
  teamd:
    driver: bridge
